version: "3.5" #version: "3.5": This specifies the version of Docker Compose to use.

services: #services:: This defines a list of services to be started.
    web-example: #web-example:: This is the name of the first service.
        build: #build: context: .: This line tells Docker to build the Docker image for the service from the current directory.
            context: .
        expose:
            - 5000 #expose: - 5000: This line exposes port 5000 to the other services within the Docker network.
        volumes:
            - .:/app:ro
            #volumes: - .:/app:ro: This line mounts the current directory on the host machine as a read-only volume at /app in the container.
        command: /usr/local/bin/gunicorn -k gevent --reload --workers 10 --worker-connections 10 --access-logfile=- --pythonpath /app -b :5000 app:app
#This line specifies the command to run when the container is started. In this case, it starts a Gunicorn server with 10 worker processes, listens on port 5000, and uses the app.py file in the /app directory as the entry point for the web application.
    nginx:
        restart: always
        image: nginx:latest
        ports:
            - "8080:8080"
        volumes:
            - ./static:/www/static:ro #This line creates a read-only volume at /www/static in the container and mounts it to the ./static directory on the host machine. This allows the Nginx server to access static files (e.g. HTML, CSS, JS) stored on the host machine.
            - ./etc/nginx.conf:/etc/nginx/conf.d/default.conf # ./etc/nginx.conf:/etc/nginx/conf.d/default.conf: This line creates a volume at /etc/nginx/conf.d/default.conf in the container and mounts it to the ./etc/nginx.conf file on the host machine. This allows the Nginx server to use a custom configuration file stored on the host machine instead of the default one included in the Nginx image.


